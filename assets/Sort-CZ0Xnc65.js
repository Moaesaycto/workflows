const r="# Sort\r\n\r\n## Basic Function\r\n\r\n* `sort file`: sorts lines lexicographically (ASCII-based).\r\n* Input: file or `stdin`; Output: `stdout`.\r\n\r\n## Key Options\r\n\r\n* `-n`: numeric sort.\r\n* `-h`: human-readable numbers (e.g. 1K, 1M).\r\n* `-r`: reverse order.\r\n* `-k N`: sort by Nth field.\r\n* `-k M.N`: sort starting from character N of field M.\r\n* `-t X`: use X as field delimiter.\r\n* `-s`: stable sort (preserve original order of equal keys).\r\n* `-u`: unique lines only.\r\n* `-f`: ignore case.\r\n\r\n## Examples\r\n\r\n* `sort -n file`: sort numbers.\r\n* `sort -t ':' -k2 file`: sort by 2nd field, colon-delimited.\r\n* `sort -k2r -k3n file`: reverse by 2nd field, then numeric by 3rd.\r\n* `sort -t '|' -k6.5nr file`: sort numerically by the decimal part (after the dot) of field 6, in **reverse**.\r\n* `sort -t '|' -k6.5nr -k2 -k1 file`: multi-key sort: decimal part of field 6 (desc), then zID (asc), then Course Code (asc).\r\n\r\n## Internals & Performance\r\n\r\n* Uses merge sort (external sort if needed).\r\n* Efficient with large files.\r\n* `--buffer-size` and `-T` control memory/temp location.\r\n\r\n## Tricks\r\n\r\n* `-kM.N` lets you sort starting at the Nth character in field M. Useful for decimal parts (e.g. `.5` in `072.093`).\r\n* `-kM.N,M'.N'` extends the above functionality by starting from the Nth character of field M and ending at the N'th character of field M'. (inclusive of the start AND the end)\r\n";export{r as default};
